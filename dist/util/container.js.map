{"version":3,"file":"container.js","sourceRoot":"","sources":["../../src/util/container.ts"],"names":[],"mappings":";;AAIA;IAII;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,CAAC;IAQD,QAAQ,CAAC,IAAa,EAAC,UAAgB,EAAC,YAAwB;QAC7D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAC,EAAC,UAAU,EAAG,UAAU,EAAC,YAAY,EAAG,YAAY,EAAC,CAAC,CAAC;IAClF,CAAC;IACD,SAAS,CAAC,IAAa,EAAC,UAAgB,EAAC,YAAwB;QAC7D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAC,EAAC,UAAU,EAAG,UAAU,EAAC,YAAY,EAAG,YAAY,EAAC,SAAS,EAAG,IAAI,EAAC,CAAC,CAAC;IACtG,CAAC;IACD,GAAG,CAAC,IAAa;QACb,MAAM,CAAC,GAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEzC,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE7B,EAAE,CAAA,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACb,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrD,EAAE,CAAA,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACnB,MAAM,CAAC,iBAAiB,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBACrD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;oBACjD,MAAM,CAAC,oBAAoB,CAAC;gBAChC,CAAC;YACL,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAEnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC;QACxB,CAAC;IACL,CAAC;IACD,wBAAwB,CAAC,OAAa;QAClC,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,EAAE,CAAA,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,iBAAiB,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAS;gBACnD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,iBAAiB,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,OAAa;QACzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAA;IAC5E,CAAC;IAED,QAAQ,CAAC,UAAgB;QACrB,MAAM,CAAC,OAAO,UAAU,KAAK,UAAU,CAAA;IAC3C,CAAC;CACJ;AA5DD,4BA4DC","sourcesContent":["\n\n\n\nexport default class Container{\n    private _services : Map<string,any>;\n    private _singletons : Map<string,any>;\n\n    constructor(){\n        this._services = new Map();\n        this._singletons = new Map();\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @param definition\n     * @param {string[]} dependencies\n     */\n    register(name : string,definition : any,dependencies? : string[]){\n       this._services.set(name,{definition : definition,dependencies : dependencies});\n    }\n    singleton(name : string,definition : any,dependencies? : string[]){\n        this._singletons.set(name,{definition : definition,dependencies : dependencies,singleton : true});\n    }\n    get(name : string) : any{\n        const c : any = this._services.get(name);\n\n        if(this._isClass(c.definition)) {\n\n            if(c.singleton) {\n                const singletonInstance = this._singletons.get(name);\n                if(singletonInstance) {\n                    return singletonInstance;\n                } else {\n                    const newSingletonInstance = this._createInstance(c);\n                    this._singletons.set(name, newSingletonInstance);\n                    return newSingletonInstance;\n                }\n            }\n\n            return this._createInstance(c);\n\n        } else {\n            return c.definition;\n        }\n    }\n    _getResolvedDependencies(service : any) : any {\n        let classDependencies = [];\n        if(service.dependencies) {\n            classDependencies = service.dependencies.map((dep : any) => {\n                return this.get(dep);\n            });\n        }\n        return classDependencies;\n    }\n\n    _createInstance(service : any) : any{\n        return new service.definition(...this._getResolvedDependencies(service))\n    }\n\n    _isClass(definition : any) : boolean {\n        return typeof definition === 'function'\n    }\n}"]}